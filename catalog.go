// Code generated by running "go generate" in golang.org/x/text. DO NOT EDIT.

package main

import (
	"golang.org/x/text/language"
	"golang.org/x/text/message"
	"golang.org/x/text/message/catalog"
)

type dictionary struct {
	index []uint32
	data  string
}

func (d *dictionary) Lookup(key string) (data string, ok bool) {
	p, ok := messageKeyToIndex[key]
	if !ok {
		return "", false
	}
	start, end := d.index[p], d.index[p+1]
	if start == end {
		return "", false
	}
	return d.data[start:end], true
}

func init() {
	dict := map[string]catalog.Dictionary{
		"en": &dictionary{index: enIndex, data: enData},
		"ru": &dictionary{index: ruIndex, data: ruData},
	}
	fallback := language.MustParse("en")
	cat, err := catalog.NewFromMap(dict, catalog.Fallback(fallback))
	if err != nil {
		panic(err)
	}
	message.DefaultCatalog = cat
}

var messageKeyToIndex = map[string]int{
	"%s=%.2f": 11,
	"/airQualityIndex - get the Air Quality Index for the location,\n/about      - into about the bot.": 5,
	"Air Quality Index":     1,
	"Details":               3,
	"Error! Please, retry!": 0,
	"Error: %v":             10,
	"Get the Air Quality Index (AQI) for the current location.\nContact: %s": 8,
	"Just share your location or try /start":                                 9,
	"Location: %f;%f. Last AQI: %s":                                          7,
	"Notify Me on AQI changes":                                               2,
	"OK. I won't notify you anymore":                                         12,
	"Share location!":                                                        4,
	"You have %d subscription(s)":                                            6,
	"üòå AQI gets better":                                                      14,
	"üò∑ AQI gets worse":                                                       13,
}

var enIndex = []uint32{ // 16 elements
	0x00000000, 0x00000016, 0x00000028, 0x00000041,
	0x00000049, 0x00000059, 0x000000ba, 0x000000d9,
	0x00000100, 0x00000149, 0x00000170, 0x0000017d,
	0x0000018b, 0x000001aa, 0x000001be, 0x000001d2,
} // Size: 88 bytes

const enData string = "" + // Size: 466 bytes
	"\x02Error! Please, retry!\x02Air Quality Index\x02Notify Me on AQI chang" +
	"es\x02Details\x02Share location!\x02/airQualityIndex - get the Air Quali" +
	"ty Index for the location,\x0a/about      - into about the bot.\x02You h" +
	"ave %[1]d subscription(s)\x02Location: %[1]f;%[2]f. Last AQI: %[3]s\x02G" +
	"et the Air Quality Index (AQI) for the current location.\x0aContact: %[1" +
	"]s\x02Just share your location or try /start\x02Error: %[1]v\x02%[1]s=%." +
	"2[2]f\x02OK. I won't notify you anymore\x02üò∑ AQI gets worse\x02üò∑ AQI get" +
	"s worse"

var ruIndex = []uint32{ // 16 elements
	0x00000000, 0x00000042, 0x00000075, 0x000000b1,
	0x000000be, 0x000000e4, 0x0000017f, 0x00000197,
	0x000001d8, 0x00000257, 0x000002b6, 0x000002ca,
	0x000002ca, 0x000002eb, 0x00000307, 0x00000323,
} // Size: 88 bytes

const ruData string = "" + // Size: 803 bytes
	"\x02–û—à–∏–±–∫–∞! –ü–æ–∂–ª—É–π—Å—Ç–∞, –ø–æ–≤—Ç–æ—Ä–∏—Ç–µ –∑–∞–ø—Ä–æ—Å\x02–ò–Ω–¥–µ–∫—Å –ö–∞—á–µ—Å—Ç–≤–∞ –í–æ–∑–¥—É—Ö–∞ (AQI)" +
	"\x02–£–≤–µ–¥–æ–º–ª—è—Ç—å –º–µ–Ω—è –æ–± –∏–∑–º–µ–Ω–µ–Ω–∏—è—Ö AQI\x02–î–µ—Ç–∞–ª–∏\x02–û–ø—Ä–∞–≤–∏—Ç—å –≥–µ–æ–ø–æ–∑–∏—Ü–∏—é" +
	"\x02/airQualityIndex - –ò–Ω–¥–µ–∫—Å –ö–∞—á–µ—Å—Ç–≤–∞ –í–æ–∑–¥—É—Ö–∞ (AQI) –¥–ª—è –º–µ—Å—Ç–æ–ø–æ–ª–æ–∂–µ–Ω–∏—è," +
	"\x0a/about      - –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ –±–æ—Ç–µ.\x02–ü–æ–¥–ø–∏—Å–æ–∫ %[1]d.\x02–ö–æ–æ—Ä–¥–∏–Ω–∞—Ç—ã: %" +
	"[1]f;%[2]f. –ü–æ—Å–ª–µ–¥–Ω–∏–π AQI: %[3]s\x02–ò–Ω–¥–µ–∫—Å –ö–∞—á–µ—Å—Ç–≤–∞ –í–æ–∑–¥—É—Ö–∞ (AQI) –¥–ª—è —Ç–µ" +
	"–∫—É—â–µ–≥–æ –º–µ—Å—Ç–æ–ø–æ–ª–æ–∂–µ–Ω–∏—è.\x0a–ö–æ–Ω—Ç–∞–∫—Ç: %[1]s\x02–ü–æ–¥–µ–ª–∏—Ç–µ—Å—å —Å–≤–æ–∏–º –º–µ—Å—Ç–æ–ø–æ–ª–æ–∂" +
	"–µ–Ω–∏–µ–º –∏–ª–∏ –Ω–∞—á–Ω–∏—Ç–µ —Å /start\x02–û—à–∏–±–∫–∞: %[1]v\x02–ü–æ–¥–ø–∏—Å–∫–∏ —É–¥–∞–ª–µ–Ω—ã.\x02üò∑ A" +
	"QI —É—Ö—É–¥—à–∏–ª—Å—è\x02üò∑ AQI —É—Ö—É–¥—à–∏–ª—Å—è"

	// Total table size 1445 bytes (1KiB); checksum: 232B4B33
